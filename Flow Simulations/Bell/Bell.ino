float Bell1[] = {0,0.0050264,0.015078,0.030155,0.050252,0.075368,0.1055,0.14064,0.18078,0.22593,0.27606,0.33118,0.39127,0.45632,0.52633,0.60128,0.68117,0.76597,0.85568,0.95028,1.0498,1.1541,1.2633,1.3773,1.4961,1.6197,1.7481,1.8812,2.0191,2.1616,2.3089,2.4608,2.6173,2.7785,2.9443,3.1146,3.2894,3.4688,3.6526,3.8409,4.0336,4.2307,4.4321,4.6379,4.848,5.0623,5.2809,5.5036,5.7305,5.9615,6.1967,6.4308,6.6639,6.896,7.127,7.3568,7.5855,7.813,8.0393,8.2642,8.4879,8.7103,8.9312,9.1508,9.3689,9.5856,9.8007,10.014,10.226,10.437,10.645,10.852,11.058,11.261,11.463,11.663,11.858,12.05,12.239,12.424,12.607,12.785,12.961,13.134,13.303,13.469,13.632,13.792,13.948,14.102,14.252,14.399,14.543,14.684,14.822,14.957,15.089,15.218,15.344,15.467,15.587,15.705,15.819,15.931,16.039,16.145,16.248,16.349,16.446,16.541,16.633,16.723,16.81,16.895,16.976,17.056,17.133,17.207,17.279,17.349,17.416,17.481,17.544,17.604,17.662,17.718,17.775,17.831,17.887,17.942,17.996,18.049,18.101,18.153,18.204,18.255,18.304,18.353,18.402,18.449,18.496,18.542,18.587,18.632,18.676,18.719,18.761,18.803,18.844,18.884,18.924,18.962,19,19.037,19.074,19.109,19.144,19.179,19.212,19.245,19.276,19.308,19.338,19.368,19.396,19.424,19.452,19.478,19.504,19.529,19.553,19.577,19.599,19.621,19.642,19.663,19.682,19.701,19.719,19.736,19.753,19.769,19.783,19.798,19.811,19.824,19.835,19.846,19.856,19.866,19.875,19.882,19.889,19.896,19.901,19.906,19.91,19.913,19.915,19.917,19.918,19.918,19.917,19.915,19.913,19.91,19.906,19.901,19.896,19.889,19.882,19.875,19.866,19.856,19.846,19.835,19.824,19.811,19.798,19.783,19.769,19.753,19.736,19.719,19.701,19.682,19.663,19.642,19.621,19.599,19.577,19.553,19.529,19.504,19.478,19.452,19.424,19.396,19.368,19.338,19.308,19.276,19.245,19.212,19.179,19.144,19.109,19.074,19.037,19,18.962,18.924,18.884,18.844,18.803,18.761,18.719,18.676,18.632,18.587,18.542,18.496,18.449,18.402,18.353,18.304,18.255,18.204,18.153,18.101,18.049,17.996,17.942,17.887,17.831,17.775,17.718,17.661,17.603,17.544,17.484,17.424,17.363,17.301,17.239,17.176,17.112,17.048,16.983,16.917,16.851,16.784,16.716,16.648,16.578,16.509,16.438,16.367,16.296,16.224,16.151,16.077,16.003,15.928,15.853,15.776,15.7,15.622,15.545,15.466,15.387,15.307,15.227,15.146,15.064,14.982,14.899,14.816,14.732,14.647,14.562,14.477,14.39,14.304,14.216,14.128,14.04,13.951,13.861,13.771,13.68,13.589,13.497,13.405,13.312,13.219,13.125,13.031,12.936,12.84,12.744,12.648,12.551,12.454,12.356,12.257,12.158,12.059,11.959,11.859,11.758,11.657,11.555,11.453,11.35,11.247,11.144,11.04,10.935,10.831,10.725,10.62,10.514,10.407,10.3,10.193,10.085,9.977,9.8685,9.7596,9.6503,9.5406,9.4306,9.3202,9.2094,9.0982,8.9867,8.8748,8.7625,8.65,8.5372,8.4242,8.3111,8.1979,8.0846,7.9714,7.8583,7.7453,7.6325,7.5198,7.4075,7.2954,7.1837,7.0725,6.9616,6.8512,6.7414,6.6321,6.5234,6.4154,6.3081,6.2014,6.0956,5.9905,5.8863,5.7829,5.6804,5.5789,5.4783,5.3787,5.2802,5.1827,5.0863,4.9911,4.8969,4.804,4.7123,4.6218,4.5326,4.4447,4.3581,4.2729,4.189,4.1066,4.0255,3.9459,3.8678,3.7912,3.7161,3.6425,3.5704,3.4997,3.4304,3.3625,3.2959,3.2306,3.1667,3.104,3.0425,2.9823,2.9232,2.8653,2.8086,2.753,2.6985,2.645,2.5927,2.5413,2.491,2.4417,2.3933,2.3459,2.2995,2.2539,2.2093,2.1656,2.1227,2.0807,2.0395,1.9991,1.9595,1.9207,1.8827,1.8454,1.8088,1.773,1.7379,1.7035,1.6698,1.6367,1.6043,1.5725,1.5414,1.5109,1.4809,1.4516,1.4229,1.3947,1.3671,1.34,1.3135,1.2875,1.262,1.237,1.2125,1.1885,1.165,1.1419,1.1193,1.0971,1.0754,1.0541,1.0332,1.0128,0.99271,0.97305,0.95378,0.9349,0.91639,0.89824,0.88045,0.86302,0.84593,0.82918,0.81276,0.79667,0.78089,0.76543,0.75027,0.73542,0.72085,0.70658,0.69259,0.67887,0.66543,0.65226,0.63934,0.62668,0.61427,0.60211,0.59019,0.5785,0.56704,0.55582,0.54481,0.53402,0.52345,0.51308,0.50292,0.49296,0.4832,0.47363,0.46426,0.45506,0.44605,0.43722,0.42856,0.42008,0.41176,0.40361,0.39561,0.38778,0.3801,0.37257,0.3652,0.35797,0.35088,0.34393,0.33712,0.33044,0.3239,0.31749,0.3112,0.30504,0.299,0.29308,0.28727,0.28159,0.27601,0.27054,0.26519,0.25994,0.25479,0.24974,0.2448,0.23995,0.2352,0.23054,0.22598,0.2215,0.21712,0.21282,0.2086,0.20447,0.20042,0.19646,0.19257};

int red = 3;
int blue = 2;
int buttonPin = 12;
int buttonState = 0;
int prevButtonState = 0;
int outPin = 10;
int outputVals[sizeof(Bell1)*sizeof(int)/sizeof(float)];

//float inputVals[] = Bell1;
//float outputVals[sizeof(Bell1[])];

void pinSetup(){
  analogWriteResolution(12);
  Serial.begin(9600);
  Serial.println(sizeof(Bell1)/sizeof(float));
  //Serial.println(sizeof(int));
  //Serial.println(sizeof(float));
  pinMode(red, OUTPUT);
  pinMode(blue, OUTPUT);
  pinMode(outPin, OUTPUT);
  pinMode(buttonPin, INPUT);
  pinMode(13, OUTPUT);
}

int flowToVolt(float flow){
  float out;
  out = 98.11*flow+1733.5;
  out = int(out);
  return out;
}

void setup() {
  pinSetup();
  //analogWriteFrequency(20, 490);
   // analogWriteResolution(12);
  
  for (int i = 0; i < sizeof(Bell1)/sizeof(float); i++){
    outputVals[i] = flowToVolt(Bell1[i]);
  }

  digitalWrite(blue, HIGH);
      digitalWrite(13, HIGH);
}

void loop() {
  buttonState = digitalRead(buttonPin);
  if (buttonState == 0 && prevButtonState == 1){
    digitalWrite(blue, LOW);
    digitalWrite(red, HIGH);
    //Serial.println(sizeof(outputVals)/(4*sizeof(int)));
    
    for (int i = 0; i < sizeof(Bell1)/(sizeof(int)); i++){
      analogWrite(outPin, outputVals[i]);
      Serial.println(outputVals[i]);
      delay(50);
    }
    digitalWrite(red, LOW); 
    digitalWrite(blue, HIGH);
    analogWrite(outPin, 0);  
  }
  
  prevButtonState = buttonState;
  analogWrite(outPin, 0);  


}


